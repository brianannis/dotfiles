export PS1="â–¶:\[\033[01;34m\]\W\[\033[00m\] "
export ITERM2_SQUELCH_MARK=0
export BASH_COMPLETION_COMPAT_DIR="/usr/local/etc/bash_completion.d"

alias hs='history | grep'
alias ll='ls -lart'
alias econf='atom ~/.ssh/config'
connect() {
	EC2TARGET=$(aws ec2 describe-instances --instance-ids $1 --query "Reservations[*].Instances[*].PrivateIpAddress" --output text)
	ssh $EC2TARGET
}

## ansible
alias ap='ansible-playbook'
alias ag='ansible-galaxy init'
alias av='ansible-vault edit'

## cluster
alias cluster-local='kubectl config use-context docker-for-desktop'

## kube
alias get='kubectl get'
alias describe='kubectl describe'
alias delete='kubectl delete'
alias apply='kubectl apply'
alias namespace='kubectl config set-context --current --namespace'

## mouse dpi
alias work-dpi='defaults write -g com.apple.mouse.scaling .800'
alias home-dpi='defaults write -g com.apple.mouse.scaling .5'

[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

## install iterm shell integration
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

iterm2_print_user_vars() {
KUBECONTEXT=$(CTX=$(kubectl config current-context) 2> /dev/null;if [ $? -eq 0 ]; then echo $CTX;fi)
KUBENAMESPACE=$(KNS=$(kubectl config view --minify --output 'jsonpath={..namespace}') 2> /dev/null;if [ $? -eq 0 ]; then echo $KNS;fi)
iterm2_set_user_var kubeContext $KUBECONTEXT
iterm2_set_user_var kubeNamespace $KUBENAMESPACE
iterm2_set_user_var awsProfile $AWS_PROFILE
}

export AWS_PROFILE='default'
