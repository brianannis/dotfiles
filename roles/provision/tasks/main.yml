---

- name: Install weaveworks tap
  homebrew_tap:
    name: weaveworks/tap

- name: Install common unix tools
  homebrew:
    name: ['htop-osx', 'wget', 'tree', 'cdrtools', 'kubernetes-cli', 'aws-iam-authenticator', 'weaveworks/tap/eksctl', 'hey', 'bash', 'bash-completion@2']
    state: present

- name: Update homebrew
  homebrew:
    update_homebrew: yes
  when: lookup('env','GITHUB_REPOSITORY') == 'brianannis/dotfiles'

- name: Install development applications
  homebrew_cask:
    name: "{{ item }}"
    state: present
  with_items:
   - google-chrome
   - atom
   - github
   - dash
   - iterm2
   - sublime-text
   - spotify
   - slack
   - vmware-fusion
   - vmware-remote-console
   - docker
   - coconutbattery
   - android-platform-tools
   - hyper
   - ccmenu
   - insomnia
   - the-unarchiver
   - sensiblesidebuttons

# OS X config
- block:
    - name: Disable natural scrolling (Requires restart)
      osx_defaults:
        domain: NSGlobalDomain
        key: com.apple.swipescrolldirection
        type: bool
        value: false
        state: present
      tags: 'osx'

  rescue:
    - name: Scrolling value not availible
      debug:
        msg: "There was an error accessing com.apple.swipescrolldirection"
- block:
    - name: Disable autocorrect (Requires restart)
      osx_defaults:
        domain: NSGlobalDomain
        key: NSAutomaticSpellingCorrectionEnabled
        type: bool
        value: false
        state: present
      tags: 'osx'

  rescue:
    - name: Autocorrect value not availible
      debug:
        msg: "There was an error accessing NSAutomaticSpellingCorrectionEnabled"

# VCS config
- name: Create VCS folder
  file:
    path: "{{ ansible_env['HOME'] }}/development"
    state: directory

# Atom config
- block:
    - name: Install atom packages
      shell: /Applications/Atom.app/Contents/Resources/app/apm/bin/apm install sync-settings@0.8.1
  rescue:
    - name: apm not availible
      debug:
        msg: "There was an error accessing apm"

- name: Create bash aliases
  template:
    src: bash_profile.j2
    dest: "{{ ansible_env['HOME'] }}/.bash_profile"
    owner: "{{ ansible_env['USER'] }}"
    group: staff
    mode: '0644'

# Sublime config
# - name: Generate Sublime user config
#   template:
#     src: sublime-settings.j2
#     dest: "/Users/{{ ansible_env['USER'] }}/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings"
#     owner: "{{ ansible_env['USER'] }}"
#     group: staff
#     mode: '0644'

# iTerm config
- name: Download iterm-colors
  git:
    repo: https://github.com/bahlo/iterm-colors.git
    dest: "{{ ansible_env['HOME'] }}/development/iterm-colors"
    version: master

- name: Install complete-alias
  get_url:
    url: https://raw.githubusercontent.com/cykerway/complete-alias/master/bash_completion.sh
    dest: "{{ ansible_env['HOME'] }}/.bash_completion"

- name: Insert/Update "Match User" configuration block in /etc/ssh/sshd_config
  blockinfile:
    path: "{{ ansible_env['HOME'] }}/.bash_completion"
    block: |
      complete -F _complete_alias get
      complete -F _complete_alias describe
      complete -F _complete_alias apply
      complete -F _complete_alias namespace

## chsh after run to upgrade from bash 3.x to 5.x

- name: Install eksctl bash completion
  shell: eksctl completion bash
  register: eksctl_completion

- set_fact:
    eksctl_completion_contents: "{{ eksctl_completion.stdout }}"

- name: Create eksctl bash completion
  template:
    src: eksctl.j2
    dest: /usr/local/etc/bash_completion.d/eksctl
    owner: "{{ ansible_env['USER'] }}"
    group: staff
    mode: '0755'

- name: Copy hyper config
  copy:
    src: .hyper.js
    dest: "{{ ansible_env['HOME'] }}/.hyper.js"
    mode: '0644'

- name: Install python packages
  pip:
    name: awscli
    state: present
