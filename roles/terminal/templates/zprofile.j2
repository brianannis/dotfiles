export ITERM2_SQUELCH_MARK=0

alias hs='history | grep'
alias ll='ls -lart'
alias econf='code ~/.ssh/config'
connect() {
	EC2TARGET=$(aws ec2 describe-instances --instance-ids $1 --query "Reservations[*].Instances[*].PrivateIpAddress" --output text)
	ssh $EC2TARGET
}
connect-ec2() {
	EC2TARGET=$(aws ec2 describe-instances --instance-ids $1 --query "Reservations[*].Instances[*].PrivateIpAddress" --output text)
	ssh ec2-user@$EC2TARGET
}

## ansible
alias ap='ansible-playbook'
alias ag='ansible-galaxy init'
alias av='ansible-vault edit'

## cluster
# alias cluster-dev='enable-dev && kubectl config use-context arn:aws:eks:us-east-1:xxxxxxxxxxx:cluster/clustername'
alias cluster-local='kubectl config use-context docker-for-desktop'

## kube
alias get='kubectl get'
alias describe='kubectl describe'
alias delete='kubectl delete'
alias apply='kubectl apply'
alias edit='kubectl edit'
alias namespace='kubectl config set-context --current --namespace'
alias gph='kubectl get pod -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase,NODE:.spec.nodeName'
alias gp='kubectl get pod'
alias gn='kubectl get nodes -L topology.kubernetes.io/zone,node.kubernetes.io/instance-type,karpenter.sh/provisioner-name,karpenter.sh/capacity-type'
alias gd='kubectl get deployments'
alias glog='stern --all-namespaces'

## aws
# alias enable-dev='export AWS_PROFILE='dev''
# alias sso='aws sso login'

iterm2_print_user_vars() {
KUBECONTEXT=$(CTX=$(kubectl config current-context | awk -F  ":" '/1/ {print $6}') 2> /dev/null;if [ $? -eq 0 ]; then echo $CTX;fi)
KUBENAMESPACE=$(KNS=$(kubectl config view --minify --output 'jsonpath={..namespace}') 2> /dev/null;if [ $? -eq 0 ]; then echo $KNS;fi)
iterm2_set_user_var kubeContext $KUBECONTEXT
iterm2_set_user_var kubeNamespace $KUBENAMESPACE
iterm2_set_user_var awsProfile $AWS_PROFILE
}

export AWS_PROFILE='default'
